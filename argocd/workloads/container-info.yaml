---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: test
  name: test-deploy
  labels:
    app: test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
    spec:
      containers:
      - name: container-info
        image: hoalt14/container-info-amd:v1
        ports:
        - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  namespace: test
  name: test-svc
  labels:
    app: test
spec:
  type: NodePort
  selector:
    app: test
  ports:
    - port: 5000
      targetPort: 5000

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  namespace: test
  name: test-ingress-class
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: ingress.k8s.aws/alb

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: test
  name: test-ingress
  labels:
    app: test
  annotations:
    # Ingress Core Settings
    alb.ingress.kubernetes.io/load-balancer-name: test-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/target-type: instance # instance | ip
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '5'
spec:
  ingressClassName: test-ingress-class
  defaultBackend:
    service:
      name: test-svc
      port:
        number: 5000
